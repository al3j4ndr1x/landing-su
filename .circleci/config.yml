# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1 # use CircleCI 2.1

executors:
  default:
    working_directory: ~/repo
    docker: # run the steps with Docker
      - image: circleci/node:10-browsers
        environment:
          ## this enables colors in the output
          TERM: xterm
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    executor: default
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: Code Has Arrived
          command: |
            ls -al
            echo '^^^That should look familiar^^^'
      - run:
          name: Running in a Unique Container
          command: |
            node -v
      - run:
          name: Updating npm at latest
          command: 'sudo npm install -g npm@latest'

      - run:
          name: Loading environment variables
          command: bash ./deploy_config.sh

      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v3-node-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v3-node-dependencies-{{ .Branch }}
            - v3-node-dependencies-

      - run:
          name: Installing Dependencies
          command: npm ci

      - run:
          name: Installing Google Cloud Functions Dependencies
          command: cd functions && npm ci

      - run:
          name: Verifying Cypress
          command: npm run cy:verify

      - save_cache: # special step to save the dependency cache
          # cache NPM modules and the folder with the Cypress binary
          paths:
            - node_modules
            - functions/node_modules
            - ~/.npm
            - ~/.cache
            - package.json
            - firebase.json
            #- .firebaserc
          key: v3-node-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .
      - run:
          name: Finally the working directory after build steps
          command: |
            ls -al
            echo '^^^That should look familiar^^^'
  test:
    executor: default
    steps:
      - attach_workspace:
          at: /home/circleci
      # start server before starting tests
      #- run:
      #    name: Starting server before starting tests
      #    command: npm start # & wait-on http://localhost:4200
      #    background: true
      - run:
          name: Running Unit Tests with Jest and collect coverage reports to Coveralls
          command: npm run test:cov

      - store_test_results:
          path: ./coverage
      - store_artifacts:
          path: ./coverage
          destination: coverage

      - run:
          name: Running end-to-end Tests and recording with Cypress
          command: npm run e2e:ci
      # - run:
      #     name: Running Jest and Collect Coverage Reports with JUnit as reporter
      #     command: |
      #       mkdir -p ./test-results/junit
      #       npm run test:cov
          #environment:
          #  JEST_JUNIT_OUTPUT: "reports/junit/jest-junit.xml"
      # - store_test_results:
      #     path: ./test-results
      # - store_artifacts:
      #     path: ./test-results/junit
      #     destination: jest

      - persist_to_workspace:
          root: /home/circleci
          paths: .

      - run:
          name: Finally the working directory after test steps
          command: |
            ls -al
            echo '^^^That should look familiar^^^'
  deploy:
    executor: default
    steps:
      - attach_workspace:
          at: /home/circleci

      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Building Master to production
          command: npm run build:prod

      - run:
          name: Deploying Master to Firebase
          command: |
            ./node_modules/.bin/firebase deploy -m "Initial deployment by CircleCI." \
            --project $FIREBASE_PROJECT_ALIAS \
            --token=$FIREBASE_DEPLOY_TOKEN

# Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - develop
                - /release-.*/
                - /feature-.*/
                - /issue-.*/
                - /bugfix-.*/
                - /hotfix-.*/
                - /docs-.*/
                - /experiment-.*/

      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:  # using regex filters requires the entire branch to match
            branches:
              only:  # only branches matching the below regex filters will run
                - master
